# Generated by Selenium IDE
# import pytest
# import time
# import json
# from selenium import webdriver
# from selenium.webdriver.common.by import By
# from selenium.webdriver.common.action_chains import ActionChains
# from selenium.webdriver.support import expected_conditions
# from selenium.webdriver.support.wait import WebDriverWait
# from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
#
# class TestCeshirensearch():
#   def setup_method(self, method):
#     self.driver = webdriver.Chrome()
#     self.vars = {}
#
#   def teardown_method(self, method):
#     self.driver.quit()
#
#   def test_ceshirensearch(self):
#     self.driver.get("https://ceshiren.com/")
#     self.driver.set_window_size(1454, 866)
#     self.driver.find_element(By.CSS_SELECTOR, ".d-icon-search").click()
#     element = self.driver.find_element(By.CSS_SELECTOR, ".d-icon-search")
#     actions = ActionChains(self.driver)
#     actions.move_to_element(element).perform()
#     element = self.driver.find_element(By.CSS_SELECTOR, "body")
#     actions = ActionChains(self.driver)
#     actions.move_to_element(element, 0, 0).perform()
#     self.driver.find_element(By.ID, "search-term").click()
#     self.driver.find_element(By.ID, "search-term").send_keys("ChromeDriver")
#     self.driver.find_element(By.CSS_SELECTOR, ".d-icon-sliders-h").click()
#     self.driver.find_element(By.ID, "ember108").click()
#     self.driver.execute_script("window.scrollTo(0,0)")


import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains


class TestCeshirenSearch:
  def setup_method(self):
    # 初始化WebDriver
    self.driver = webdriver.Chrome()
    self.wait = WebDriverWait(self.driver, 10)  # 设置显式等待时间

  def teardown_method(self):
    # 退出WebDriver
    self.driver.quit()

  def test_ceshiren_search(self):
    # 打开测试人论坛
    self.driver.get("https://ceshiren.com/")

    # 点击搜索按钮
    search_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".d-icon-search")))
    search_button.click()

    # 输入关键字：ChromeDriver
    search_input = self.wait.until(EC.presence_of_element_located((By.ID, "search-term")))
    search_input.clear()  # 清空输入框
    search_input.send_keys("ChromeDriver")

    # 点击高级搜索按钮
    advanced_search_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".d-icon-sliders-h")))
    advanced_search_button.click()

    # 提交搜索（假设点击某个元素来提交搜索）
    submit_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".search-cta")))
    submit_button.click()

    # 等待搜索结果加载完成并获取第一个标题元素
    first_result_title = self.wait.until(
      EC.presence_of_element_located((By.CSS_SELECTOR, ".topic-title"))
    )
    print(first_result_title)

    # 断言出现的第一个标题的内容
    #assert "ChromeDriver" in first_result_title.text, f"Expected 'ChromeDriver' to be in the first result title, but got {first_result_title.text}"

# 如果你想直接运行这个测试用例，可以取消下面注释
if __name__ == "__main__":
    pytest.main(["-v", "--html=report.html"])
